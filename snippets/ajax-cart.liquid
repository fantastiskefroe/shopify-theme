<script>
    const _config = {
        // What you might want to change
        addToCartBtnLabel: 'Føj til kurv',
        addedToCartBtnLabel: 'Tilføjet!',
        addingToCartBtnLabel: 'Tilføjer...',
        soldOutBtnLabel: 'Udsolgt',
        howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
        feedbackPosition: 'nextButton',

        // What you will never need to change
        addToCartBtnSelector: '[type="submit"]',
        addToCartFormSelector: 'form[action="/cart/add"]',
        feedbackSelector: 'ajaxified-cart-feedback',
        shopifyAjaxAddURL: '/cart/add.js',
        shopifyAjaxUpdateURL: '/cart/update.js',
        shopifyAjaxCartURL: '/cart.js'
    };

    function _showFeedback(success, content, formEl) {
        const existingFeedbackEl = document.getElementById(_config.feedbackSelector);
        if (existingFeedbackEl) {
            existingFeedbackEl.remove();
        }

        const newFeedbackEl = document.createElement('p');
        newFeedbackEl.id = _config.feedbackSelector;
        newFeedbackEl.classList.add(success ? 'success' : 'error');
        newFeedbackEl.innerHTML = content;

        formEl.querySelector(_config.addToCartBtnSelector).after(newFeedbackEl);
    }

    function _setText(text, btnEl) {
        if (btnEl.children) {
            btnEl.children.forEach((el) => {
                if (el.textContent.trim() !== '') {
                    el.textContent = text;
                }
            });
        } else {
            btnEl.textContent = text;
        }
    }

    function _serializeForm(formEl) {
        const formData = new FormData(formEl);
        const result = {};
        for (const [key, value] of formData) {
            result[key] = value;
        }

        return result;
    }

    function _handleFormSubmit(event) {
        event.preventDefault();
        const formEl = event.target;
        const formBtnEl = event.submitter;
        let formData = _serializeForm(formEl);

        _setText(_config.addingToCartBtnLabel, formBtnEl);
        formBtnEl.classList.add('disabled');
        formBtnEl.disabled = true;

        let postURL = _config.shopifyAjaxAddURL;

        const limitedVariantIDs = ['37789873078464'];
        for (const limitedVariantID of limitedVariantIDs) {
            if (formData.id === limitedVariantID) {
                postURL = _config.shopifyAjaxUpdateURL;
                formData = {
                    updates: {}
                }
                formData.updates[limitedVariantID] = 1;

                break;
            }
        }

        const productType = document.getElementsByClassName('product-section')[0].dataset.productType;
        if (productType === 'bundle') {
            const bundleID = parseInt(formData.id);
            const quantity = formData.quantity;
            const bundleProducts = window.bundleData[bundleID].products;
            const bundleTitle = window.bundleData[bundleID].title;

            formData = {
                items: []
            };

            for (const bundleProduct of bundleProducts.reverse()) {
                formData.items.push({
                    id: bundleProduct.id,
                    quantity: quantity,
                    properties: {
                        _partOf: bundleID,
                        _bundleTitle: bundleTitle
                    }
                })
            }

            formData.items.push({
                id: bundleID,
                quantity: quantity,
                properties: {
                    _bundle: true
                }
            });
        }

        const request = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        }

        fetch(postURL, request)
            .catch((error) => {
                Sentry.captureMessage("Add to cart gave an error: " + JSON.stringify(error));

                // var response = eval('(' + XMLHttpRequest.responseText + ')');
                // response = response.description;
                // if (response.slice(0, 4) === 'All ') {
                //     _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
                //     $addToCartBtn.prop('disabled', false);
                //     _setText($addToCartBtn, _config.soldOutBtnLabel);
                //     $addToCartBtn.prop('disabled', true);
                // } else {
                //     _showFeedback('error', '<b>✕</b> ' + response, $addToCartForm);
                //     $addToCartBtn.prop('disabled', false).removeClass('disabled');
                //     _setText($addToCartBtn, _config.addToCartBtnLabel);
                // }
            })
            .then(() => {
                formBtnEl.classList.add('inverted');
                _setText(_config.addedToCartBtnLabel, formBtnEl);
                _showFeedback(true, '<b>✓</b> Tilføjet til din <a href="/cart">kurv</a>!', formEl);

                const cartBubbleEl = document.querySelector('.cart-link__bubble');
                cartBubbleEl.classList.add('cart-link__bubble--visible');

                if (postURL === _config.shopifyAjaxAddURL) {
                    window.setTimeout(() => {
                        formBtnEl.classList.remove('inverted', 'disabled');
                        formBtnEl.disabled = false;
                        _setText(_config.addToCartBtnLabel, formBtnEl);
                    }, _config.howLongTillBtnReturnsToNormal);
                }
            });

        return false;
    }

    document.addEventListener('page:loaded', () => {
        const formEl = document.querySelector('form[action="/cart/add"]');
        if (formEl) {
            formEl.addEventListener('submit', _handleFormSubmit);
        }
    });
</script>

<style>
    #ajaxified-cart-feedback {
        display: block;
        line-height: 36px;
        font-size: 90%;
        vertical-align: middle;
    }

    #ajaxified-cart-feedback.success {
        color: #3D9970;
    }

    #ajaxified-cart-feedback.error {
        color: #FF4136;
    }

    #ajaxified-cart-feedback a {
        border-bottom: 1px solid;
    }
</style>