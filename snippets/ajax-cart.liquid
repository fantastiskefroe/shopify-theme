<script>

    /**
     * Module to ajaxify all add to cart forms on the page.
     *
     * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
     * Dual licensed under the MIT and GPL licenses:
     * http://www.opensource.org/licenses/mit-license.php
     * http://www.gnu.org/licenses/gpl.html
     *
     */
    Shopify.AjaxifyCart = (function ($) {

        // Some configuration options.
        // I have separated what you will never need to change from what
        // you might change.

        const _config = {
            // What you might want to change
            addToCartBtnLabel: 'Føj til kurv',
            addedToCartBtnLabel: 'Tilføjet!',
            addingToCartBtnLabel: 'Tilføjer...',
            soldOutBtnLabel: 'Udsolgt',
            howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
            // 'aboveForm' for top of add to cart form,
            // 'belowForm' for below the add to cart form, and
            // 'nextButton' for next to add to cart button.
            feedbackPosition: 'nextButton',

            // What you will never need to change
            addToCartBtnSelector: '[type="submit"]',
            addToCartFormSelector: 'form[action="/cart/add"]',
            shopifyAjaxAddURL: '/cart/add.js',
            shopifyAjaxCartURL: '/cart.js'
        };

        // We need some feedback when adding an item to the cart.
        // Here it is.
        const _showFeedback = function (success, html, $addToCartForm) {
            const cartFeedback = $('.ajaxified-cart-feedback');
            cartFeedback.remove();

            const feedback = `<p class="ajaxified-cart-feedback ${success}">${html}</p>`;
            $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);

            cartFeedback.slideDown();
        };

        const _setText = function ($button, label) {
            if ($button.children().length) {
                $button.children().each(function () {
                    if ($.trim($(this).text()) !== '') {
                        $(this).text(label);
                    }
                });
            } else {
                $button.val(label).text(label);
            }
        };

        const _init = function () {
            $(document).ready(function () {
                $(_config.addToCartFormSelector).submit(function (e) {
                    e.preventDefault();
                    const $addToCartForm = $(this);
                    const formData = new FormData(this);
                    const $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
                    _setText($addToCartBtn, _config.addingToCartBtnLabel);
                    $addToCartBtn.addClass('disabled').prop('disabled', true);

                    let cartData = $addToCartForm.serialize();

                    // Only ever allow adding a single free bee buffet to cart
                    if (cartData.includes('37789873078464')) {
                        $.ajax({
                            url: '/cart/update.js',
                            dataType: 'json',
                            type: 'post',
                            data: {
                                updates: {
                                    37789873078464: 1
                                }
                            },
                            success: function (itemData) {
                                // Re-enable add to cart button.
                                $addToCartBtn.addClass('inverted');
                                _setText($addToCartBtn, _config.addedToCartBtnLabel);
                                _showFeedback('success', '<b>✓</b> Tilføjet til din <a href="/cart">kurv</a>!', $addToCartForm);
                                // Update cart count and show cart link.
                                $('.cart-link__bubble').addClass('cart-link__bubble--visible');
                            },
                            error: function (XMLHttpRequest) {
                                var response = eval('(' + XMLHttpRequest.responseText + ')');
                                response = response.description;
                                if (response.slice(0, 4) === 'All ') {
                                    _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
                                    $addToCartBtn.prop('disabled', false);
                                    _setText($addToCartBtn, _config.soldOutBtnLabel);
                                    $addToCartBtn.prop('disabled', true);
                                } else {
                                    _showFeedback('error', '<b>✕</b> ' + response, $addToCartForm);
                                    $addToCartBtn.prop('disabled', false).removeClass('disabled');
                                    _setText($addToCartBtn, _config.addToCartBtnLabel);
                                }
                            }
                        });

                        return false;
                    }

                    const productType = document.getElementsByClassName('product-section')[0].dataset.productType;
                    if (productType === 'bundle') {
                        const bundleID = parseInt(formData.get('id'));
                        const quantity = formData.get('quantity');
                        const bundleProducts = window.bundleData[bundleID].products;
                        const bundleTitle = window.bundleData[bundleID].title;

                        cartData = {
                            items: []
                        };

                        for (const bundleProduct of bundleProducts.reverse()) {
                            cartData.items.push({
                                id: bundleProduct.id,
                                quantity: quantity,
                                properties: {
                                    _partOf: bundleID,
                                    _bundleTitle: bundleTitle
                                }
                            })
                        }

                        cartData.items.push({
                            id: bundleID,
                            quantity: quantity,
                            properties: {
                                _bundle: true
                            }
                        });
                    }

                    // Add to cart.
                    $.ajax({
                        url: _config.shopifyAjaxAddURL,
                        dataType: 'json',
                        type: 'post',
                        data: cartData,
                        success: function (itemData) {
                            // Re-enable add to cart button.
                            $addToCartBtn.addClass('inverted');
                            _setText($addToCartBtn, _config.addedToCartBtnLabel);
                            _showFeedback('success', '<b>✓</b> Tilføjet til din <a href="/cart">kurv</a>!', $addToCartForm);
                            window.setTimeout(function () {
                                $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
                                _setText($addToCartBtn, _config.addToCartBtnLabel);
                            }, _config.howLongTillBtnReturnsToNormal);
                            // Update cart count and show cart link.
                            $('.cart-link__bubble').addClass('cart-link__bubble--visible');
                        },
                        error: function (XMLHttpRequest) {
                            var response = eval('(' + XMLHttpRequest.responseText + ')');
                            response = response.description;
                            if (response.slice(0, 4) === 'All ') {
                                _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
                                $addToCartBtn.prop('disabled', false);
                                _setText($addToCartBtn, _config.soldOutBtnLabel);
                                $addToCartBtn.prop('disabled', true);
                            } else {
                                _showFeedback('error', '<b>✕</b> ' + response, $addToCartForm);
                                $addToCartBtn.prop('disabled', false).removeClass('disabled');
                                _setText($addToCartBtn, _config.addToCartBtnLabel);
                            }
                        }
                    });

                    return false;
                });
            });
        };
        return {
            init: function (params) {
                // Configuration
                params = params || {};
                // Merging with defaults.
                $.extend(_config, params);
                // Action
                $(function () {
                    _init();
                });
            },
            getConfig: function () {
                return _config;
            }
        }
    })(jQuery);

    Shopify.AjaxifyCart.init();

</script>

<style>
    .ajaxified-cart-feedback {
        display: block;
        line-height: 36px;
        font-size: 90%;
        vertical-align: middle;
    }

    .ajaxified-cart-feedback.success {
        color: #3D9970;
    }

    .ajaxified-cart-feedback.error {
        color: #FF4136;
    }

    .ajaxified-cart-feedback a {
        border-bottom: 1px solid;
    }
</style>
